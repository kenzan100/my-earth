#!/usr/bin/env ruby

require 'dry/cli'
require 'faraday'
require 'dotenv'

URL_HOST = 'http://localhost:9292/'

Dotenv.load

class WithEnvLoader < Dry::CLI::Command
  def initialize(**)
    super
    @client = ->(path, params) {
      Faraday.get(URL_HOST + path, params, { 'MY_JOB_GAME_ID' => ENV['GAME_ID'] })
    }
  end
end

module MyEarth
  module MyJob
    module Commands
      extend Dry::CLI::Registry

      class Action < WithEnvLoader
        desc "List of one-off actions"

        argument :target, required: true, desc: "The name of goods for action. list to see the available goods."
        argument :action, desc: "The name of action you wanna perform on."

        def call(target:, action: nil, **)
          if target == 'list'
            puts "List of available actions.."
            puts
            res = @client.call("list", { text: true })
            puts res.body
          elsif target && action
            puts "trying to #{action} #{target}.."

            res = @client.call("action", { target: target, action: action })
            puts res.body
          else
            puts "Usage: \"me action TARGET ACTION\""
          end
        end
      end

      class Schedule < Dry::CLI::Command
        desc "Schedule your day"

        argument :allocatable
        argument :action
        argument :start_time
        argument :end_time

        def call(allocatable: nil, action: nil, start_time: nil, end_time: nil, **)
          if [allocatable, action, start_time, end_time].none?
            puts 'reading your current schedule..'

            res = Faraday.get(URL_HOST + "schedule")
            puts res.body

            return
          end

          if allocatable && action && start_time && end_time
            puts "Scheduling #{action} #{allocatable} from #{start_time} till #{end_time}..."

            res = Faraday.get(
              URL_HOST +
                "schedule?"+
                "target=#{allocatable}&"+
                "scheduled_action=#{action}&"+
                "scheduled_time_from=#{start_time}&"+
                "scheduled_time_till=#{end_time}"
            )
            puts res.body

          else
            puts "Usage: \"me schedule ALLOCATABLE ACTION START_TIME END_TIME\""
          end
        end
      end

      class Status < Dry::CLI::Command
        desc "See current stats"

        def call(input: nil, **)
          puts "reading latest stats.."

          res = Faraday.get(URL_HOST + "stats")
          puts res.body
        end
      end

      class Logs < Dry::CLI::Command
        argument :since

        def call(since: nil, **)
          res = Faraday.get(URL_HOST + "logs?since=#{since}")
          puts res.body
        end
      end

      class ChangeSpeed < Dry::CLI::Command
        argument :val

        def call(val: nil, **)
          res = Faraday.get(URL_HOST + "change_speed?speed=#{val}")
          puts res.body
        end
      end

      constants.each do |const|
        register const.downcase.to_s, const_get(const)
      end
    end
  end
end

Dry::CLI.new(MyEarth::MyJob::Commands).call